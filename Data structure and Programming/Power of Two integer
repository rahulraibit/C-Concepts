class Solution {
    public int isPower(int A) {
        
        return isPowerTest(A) ? 1 : 0;
    }
    
    // Returns true if n can be written as x^y 
    bool isPowerTest(int n) 
    { 
        if (n==1) return true; 
    
        // Try all numbers from 2 to sqrt(n) as base 
        for (int x=2; x<=Math.Floor(Math.Sqrt(n)); x++) 
        { 
            int y = 2; 
            int p = (int)Math.Pow(x, y); 
    
            // Keep increasing y while power 'p' is smaller 
            // than n. 
            while (p<=n && p>0) 
            { 
                if (p==n) 
                    return true; 
                y++; 
                p = (int)Math.Pow(x, y); 
            } 
        } 
        return false; 
    } 
}